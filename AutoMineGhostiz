print('B S M 2 AutoMine v. 1.4.1.')
local HttpService = game:GetService("HttpService")
local LocalPlayer = game:GetService('Players').LocalPlayer
local gameContentFolder = workspace:FindFirstChild('__GAME_CONTENT')
local OreFolder = nil


local Settings = {
	AutoMine = false,
	DistFromOre = 4,
	OreSearch = {},
}

local loadedData = readfile("BSM2.json")
Settings = HttpService:JSONDecode(loadedData)

for _,v in pairs(gameContentFolder:GetDescendants()) do
	if v:IsA('Folder') and v.Name:lower() == 'stone' then
		OreFolder = v.Parent
		break
	end
end


for _, ores in pairs(OreFolder:GetChildren()) do
	--table.insert(OreSearch, ores.Name:lower())
	if Settings['OreSearch'][ores.Name:lower()] == nil then
		Settings['OreSearch'][ores.Name:lower()] = false
	end
end


local function Mine()
	while Settings['AutoMine'] do
		local OreTarget = nil
		local MinamalDistance = math.huge

		local char = LocalPlayer.Character
		local HRP = char.HumanoidRootPart
		local Humanoid = char.Humanoid

		for _, ores in pairs(OreFolder:GetChildren()) do
			if Settings['OreSearch'][ores.Name:lower()] then
				for _, ore in pairs(ores:GetChildren()) do
					if #ore.Block:GetChildren() >= 4 then
						local TouchPart = ore.Touch
						local distance = (TouchPart.Position - HRP.Position).Magnitude
						if distance < MinamalDistance then
							OreTarget = TouchPart
							MinamalDistance = distance
						end
					end
				end
			end
		end

		for _,v in pairs(OreTarget:GetChildren()) do
			if v:IsA('MeshPart') or v:IsA('BasePart') then
				v.CanCollide = false
			end
		end

		if MinamalDistance >= DistFromOre + 1 then
			local direction = (HRP.Position - OreTarget.Position).Unit
			local offset = direction * DistFromOre 
			local targetPosition = OreTarget.Position + offset
			Humanoid:MoveTo(targetPosition)
			Humanoid.MoveToFinished:Wait()
		end
		task.wait(.1)
	end
end


local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local PhantomForcesWindow = Library:NewWindow("GHOSTIZ")

local Main = PhantomForcesWindow:NewSection("Main")
local SelectOres = PhantomForcesWindow:NewSection("Main")

Main:CreateButton("Save settings", function()
	local jsonData = HttpService:JSONEncode(Settings)
	writefile("BSM2.json", jsonData)
end)

Main:CreateToggle("Auto Mine", function(value)
	Settings['AutoMine'] = value
	Mine()
end)

Main:CreateSlider("DistFromOre", 1, 7, 4, false, function(value)
	DistFromOre = value
end)

for name, status in pairs(Settings['OreSearch']) do
	SelectOres:CreateToggle(name:upper(), function(value)
		Settings['OreSearch'][name:lower()] = value
	end)
end


Main:CreateButton("DESTROY GUI", function()
	Settings['AutoMine'] = false
	for i, v in pairs(game.CoreGui:GetChildren()) do
		if v.Name == "WizardLibrary" then
			v:Destroy()
		end
	end
end)

game.Players.PlayerRemoving:Connect(function()
	local jsonData = HttpService:JSONEncode(Settings)
	writefile("BSM2.json", jsonData)
end)
